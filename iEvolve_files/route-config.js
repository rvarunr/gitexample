define(["../require/lazy-directives"],function(lazyDirectives){var $controllerProvider,$compileProvider;function setControllerProvider(value){$controllerProvider=value}function setCompileProvider(value){$compileProvider=value;lazyDirectives.setCompileProvider(value)}function config(templateUrl,controllerName,directives){if(!$controllerProvider){throw new Error("$controllerProvider is not set!")}var defer,html,routeDefinition={};routeDefinition.template=function(){if(html=="SM_USER_CHANGE"||html=="SESSION_EXPIRED"){location.href="index.html"}else{if(html=="SM_USER_NULL"||html=="INVALID_HEADER"||html=="NO_ROLES_FOUND"){location.href="pages/error/noAccess.html"}}return html};routeDefinition.controller=controllerName;routeDefinition.resolve={delay:function($q,$rootScope){defer=$q.defer();if(!html){var dependencies=[controllerName,"text!"+templateUrl];if(directives){dependencies=dependencies.concat(directives)}require(dependencies,function(){var controller=arguments[0],template=arguments[1];for(var i=2;i<arguments.length;i++){lazyDirectives.register(arguments[i])}$controllerProvider.register(controllerName,controller);html=template;defer.resolve();$rootScope.$$phase||$rootScope.$apply()})}else{defer.resolve()}return defer.promise}};return routeDefinition}return{setControllerProvider:setControllerProvider,setCompileProvider:setCompileProvider,config:config}});